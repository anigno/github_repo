//8/5/98
//include map objects


//*******************************************************
void house1(int x,int y){
int i,j;
	x=x-10;y=y+20;
	setcolor(14);
	for(i=y;i>y-60;i--){
		line(x,i,x+40,i);
	}//for

	setcolor(7);
	for(i=x,j=y-60;j>y-80;i++,j--){
		line(i,j,i+40,j);
	}//for

	setcolor(3);
	for(i=x+40,j=y-60;i<x+60;i++,j--){
		line(i,j,i,j+60);
	}//for


setfillstyle(1,1);
bar(x+15,y,x+25,y-10); //door

bar(x+5,y-20,x+10,y-25);//window
bar(x+5,y-30,x+10,y-35);//window
bar(x+5,y-40,x+10,y-45);//window
bar(x+5,y-50,x+10,y-55);//window

bar(x+25,y-20,x+30,y-25);//window
bar(x+25,y-30,x+30,y-35);//window
bar(x+25,y-40,x+30,y-45);//window
bar(x+25,y-50,x+30,y-55);//window
}//void house1
//*******************************************************






//*******************************************************
void house2(int x,int y){
int i,j;
x=x-10;y=y+20;
	setcolor(3);
	for(i=y;i>y-30;i--){
		line(x,i,x+40,i);
	}//for

	setcolor(7);
	for(i=x,j=y-30;j>y-50;i++,j--){
		line(i,j,i+40,j);
	}//for

	setcolor(15);
	for(i=x+40,j=y-30;i<x+60;i++,j--){
		line(i,j,i,j+30);
	}//for

setcolor(15);
setfillstyle(1,8);
pieslice(x+30,y-50,360-45,180-45,15);
setcolor(8);
line(x+30,y-50,x+40,y-60);


setfillstyle(1,1);
bar(x+15,y,x+25,y-10); //door

bar(x+5,y-20,x+10,y-25);//window

bar(x+25,y-20,x+30,y-25);//window

}//void house2
//*******************************************************





//*******************************************************
void house3(int x,int y){
int i,j;
x=x-10;y=y+40;

	setcolor(14);
	for(i=y;i>y-30;i--){
		line(x,i,x+100,i);
	}//for

	setcolor(7);
	for(i=x,j=y-30;j>y-65;i++,j--){
		line(i,j,i+100,j);
	}//for

	setcolor(15);
	for(i=x+100,j=y-30;i<x+135;i++,j--){
		line(i,j,i,j+30);
	}//for


	setcolor(14);
	for(i=y-40;i>y-80;i--){
		line(x+30,i,x+70,i);
	}//for

	setcolor(7);
	for(i=x+30,j=y-80;j>y-100;i++,j--){
		line(i,j,i+40,j);
	}//for

	setcolor(15);
	for(i=x+70,j=y-80;i<x+90;i++,j--){
		line(i,j,i,j+40);
	}//for

setcolor(15);
setfillstyle(1,8);
pieslice(x+55,y-100,360-45,180-45,15);
setcolor(1);
line(x+55,y-100,x+65,y-110);


setfillstyle(1,1);
bar(x+15,y,x+25,y-10); //door

bar(x+5,y-20,x+10,y-25);//window
bar(x+25,y-20,x+30,y-25);//window
bar(x+45,y-20,x+50,y-25);//window
bar(x+65,y-20,x+70,y-25);//window
bar(x+85,y-20,x+90,y-25);//window

bar(x+35,y-60,x+40,y-65);//window
bar(x+55,y-60,x+60,y-65);//window

}//void house3
//*******************************************************




//*******************************************************
void tree(int x,int y){
int i,j;
y=y-10;
x=x-5;
setfillstyle(1,6);
bar(x,y,x+10,y+20);

setcolor(lightgreen);
setfillstyle(1,lightgreen);
pieslice(x+5,y-10,0,360,20);

}//void tree
//*******************************************************





//*******************************************************
void pool(int x,int y){
setfillstyle(1,1);
bar(x,y,x+60,y+30);
}//void pool
//*******************************************************





//*******************************************************
void tree2(int x,int y){
	x=x-20;y=y-20;
	int a;
	setcolor(brown);
	for(a=0;a<=20;a=a+1)line(x+25,y+a+10,x+35,y+a+10);
	setcolor(lightgreen);
	for(a=0;a<=30;a=a+3)circle(x+30,y+a-20,a/2);
}//void draw_tree
//*******************************************************



//*******************************************************
void house4(int x,int y){
x=x-10;y=y-20;
	int a,b;
	setcolor(brown);
	for(a=0;a<=39;a++)line(x,y+a,x+40,y+a);
	setcolor(black);
	for(a=0;a<=39;a=a+1)line(x+40,y+a,x+60,y+a-20);
	setcolor(brown);
	for(a=0;a<=39;a=a+2)line(x+40,y+a,x+60,y+a-20);
	setcolor(red);
	for(a=0;a<=20;a=a+1)line(x+a,y-a,x+40+a,y-a);
	setcolor(yellow);
	//draw windows
	for(a=0;a<=5;a++)line(x+5,y+a+5,x+15,y+a+5);
	for(a=0;a<=5;a++)line(x+25,y+a+5,x+35,y+a+5);
	for(a=0;a<=5;a++)line(x+5,y+a+15,x+15,y+a+15);
	for(a=0;a<=5;a++)line(x+25,y+a+15,x+35,y+a+15);
	for(a=0;a<=5;a++)line(x+5,y+a+25,x+15,y+a+25);
	for(a=0;a<=5;a++)line(x+25,y+a+25,x+35,y+a+25);

	//draw balkonies
	for(a=0;a<=5;a=a+2)line(x+45,y-a+10,x+55,y-a);
	for(a=0;a<=5;a=a+2)line(x+45,y-a+20,x+55,y-a+10);
	for(a=0;a<=5;a=a+2)line(x+45,y-a+30,x+55,y-a+20);

}//void house4
//*******************************************************




//*******************************************************
void house5(int x,int y){
x=x-10;y=y-20;
	int a,b;
	setcolor(blue);
	for(a=0;a<=39;a++)line(x,y+a,x+40,y+a);
	setcolor(black);
	for(a=0;a<=39;a=a+1)line(x+40,y+a,x+60,y+a-20);
	setcolor(darkgray);
	for(a=0;a<=39;a=a+2)line(x+40,y+a,x+60,y+a-20);
	setcolor(red);
	for(a=0;a<=20;a=a+1)line(x+a,y-a,x+40+a,y-a);
	setcolor(yellow);
	//draw windows
	for(a=0;a<=5;a++)line(x+5,y+a+5,x+15,y+a+5);
	for(a=0;a<=5;a++)line(x+25,y+a+5,x+35,y+a+5);
	for(a=0;a<=5;a++)line(x+5,y+a+15,x+15,y+a+15);
	for(a=0;a<=5;a++)line(x+25,y+a+15,x+35,y+a+15);
	for(a=0;a<=5;a++)line(x+5,y+a+25,x+15,y+a+25);
	for(a=0;a<=5;a++)line(x+25,y+a+25,x+35,y+a+25);

	//draw balkonies
	for(a=0;a<=5;a=a+2)line(x+45,y-a+10,x+55,y-a);
	for(a=0;a<=5;a=a+2)line(x+45,y-a+20,x+55,y-a+10);
	for(a=0;a<=5;a=a+2)line(x+45,y-a+30,x+55,y-a+20);
}//void house5
//*******************************************************







//*******************************************************
void draw_bus(int x,int y){
	y=y-15;
	char bus[20][40]={
"1111111111111111111111111111111111111000",
"1777777777777777777777777777777710001110",
"1755555555555555555555555555555710000011",
"1750000500005000050000050000005771000011",
"1750000500005000050000050000005771000011",
"1750000500005000050000050000005771000011",
"1750000500005000050000050000005777100011",
"1750000500005000050000050000005777100011",
"1755555555555555555555555555555777110011",
"1777777777777777777777777777777777771111",
"1777777777777777777777777777777777777771",
"1777777777777777777777777777777777777771",
"1777777777777777777777777777777777777771",
"1777777777777777777777777777777777777771",
"1777777666777777777777777777777766677771",
"1777766666667777777777777777776666666771",
"1111166666661111111111111111116666666711",
"0000066666660000000000000000006666666000",
"0000006666600000000000000000000666660000",
"0000000666000000000000000000000066600000",

	};
int a,b;
for(b=0;b<=19;b++){
	for(a=0;a<=39;a++){
		if(bus[b][a]!='0')putpixel(x+a,y+b,bus[b][a]-48);
	}//for
}//for
}//void draw_bus
//*******************************************************



//*******************************************************
void draw_car(int x,int y){
	y=y-15;
	char bus[20][40]={
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000000000000000000000000000000000000000",
"0000055555555555555555555000000000000000",
"0000555510000010000015500550000000000000",
"0005555510000010000015550055000000000000",
"0055555515111115111115550005500000000000",
"0555555551555551555551555000055000000000",
"5555555551555551555551555555555555000000",
"5555555551555551555551555555555555500000",
"5506666555555555555566665555555555500000",
"0006666000000000000066660000000000000000",
"0000660000000000000006600000000000000000"

	};
int a,b;
for(b=0;b<=19;b++){
	for(a=0;a<=39;a++){
		if(bus[b][a]!='0')putpixel(x+a,y+b,bus[b][a]-48+4);
	}//for
}//for
}//void draw_car
//*******************************************************





//*******************************************************
void draw_karlos(int rx,int ry,int tx,int ty,int dx){
//rx,ry - position on view port to draw karlos
//tx,ty - carlos position on map
//dx - carlos direction (left or right)

char kar[2][59][30]={
"000000000000000000000000000",
"000000000000003000000000000",
"000000000000003300000000000",
"000000000033333330000000000",
"000000003330000030000000000",
"000000003550033330000000000",
"000000003445533300000000000",
"000000003555530000000000000",
"000000003553533000000000000",
"000000003553553000000000000",
"000000033555553330000000000",
"000000334555555530000000000",
"000003355555555530000000000",
"000003555555552530000000000",
"000003333355553330000000000",
"000003222333353000000330000",
"000003222222333300033323300",
"000033222222222330032222330",
"000332222222222230032222230",
"000322222222222230032222230",
"000322222222242230032222330",
"003222224222224443322223300",
"032222224222222222222233000",
"032222242222222222222230000",
"032222242222222222222230000",
"032222242222222222222230000",
"032222422222222222222330000",
"032222333222222332222300000",
"033222300322222333233000000",
"003222300322222303330000000",
"003222230032222300000000000",
"003332233032222300000000000",
"000033222343333330000000000",
"000003222344444433000000000",
"000003322344444443300000000",
"000000333444444444430000000",
"000000033444444444433000000",
"000000334444444444443300000",
"000000344444444444444330000",
"000003344444444444444433000",
"000003444444434444444443000",
"000003444444433444444443000",
"000033444444333444444443000",
"000334444433303344444443000",
"003344444330000334444443000",
"003444443300000034444443000",
"003444433000000034444433000",
"034444430000000034444430000",
"034444330000000034444430000",
"034443300000000034433330000",
"034333000000000033331330000",
"034133000000000031111300000",
"033113000000000031111300000",
"003113333300000331111333300",
"003111111330000311111111330",
"003111111130000311111111130",
"003111111130000311111111130",
"000333333330000333333333330",
"000000000000000000000000000",

"000000000000000000000000000",
"000000000000003300000000000",
"000000000333303300000000000",
"000000000300333300000000000",
"000000003300053300000000000",
"000000003440053000000000000",
"000000003555553000000000000",
"000000003555353333000000000",
"000000003455355553300000000",
"000000003455555555300000000",
"000000003555555555300000000",
"000000035555555253300000000",
"000000335555555333000000000",
"000000333555553000000000000",
"000003223333333300000000000",
"000032222222222330000000000",
"000332222222222230000000000",
"000322222222222230000000000",
"000322222222222233000000000",
"000322242222222223000000000",
"000322242233332223000000000",
"000322232232233323000000000",
"000322232232222323000000000",
"000322323332223323000000000",
"000322333222332223000000000",
"000322222223322223000000000",
"000322222332222223000000000",
"000332223322222223000000000",
"000033333222222222300000000",
"000003322233333333300000000",
"000000334444444300000000000",
"000000344444444300000000000",
"000003444444444300000000000",
"000003444444444300000000000",
"000003444444444300000000000",
"000003444444444300000000000",
"000003444444444300000000000",
"000003444443444300000000000",
"000003444443444300000000000",
"000003444443444300000000000",
"000003444443344330000000000",
"000003444443344430000000000",
"000003444443334430000000000",
"000003444443034430000000000",
"000003444443034430000000000",
"000003444443034430000000000",
"000003444433034430000000000",
"000003444433034430000000000",
"000003444333031133000000000",
"000003111300031113000000000",
"000003111330031111333000000",
"000003111130333331113300000",
"000003111133311131113300000",
"000003111111111133113300000",
"000003311111111113113300000",
"000000331111111113313000000",
"000000033333333333033000000",
"000000000000000000000000000",
"000000000000000000000000000",
};

static int md=0;//type of karlos to draw
static int mx=-1,my=-1;
int x,y;


if( (tx!=mx)||(ty!=my) ){
mx=tx;
my=ty;
md++;if(md>1)md=0;
}//if
for(y=0;y<=58;y++){
	for(x=0;x<=26;x++){
		if(dx<=0)if(kar[md][y][x]!=48)putpixel(-15+(26-x)+rx*10,-55+y+ry*10,kar[md][y][x]-47);
		if(dx==1)if(kar[md][y][x]!=48)putpixel(-15+x+rx*10,-55+y+ry*10,kar[md][y][x]-47);
	}//for
}//for
delay(10);
}//void draw_karlos
//*******************************************************



//*******************************************************
void draw_policeman(int rx,int ry,int tx,int ty,int cx,int dx){
//rx,ry - position on view port to draw karlos
//tx,ty - carlos position on map
//dx - carlos direction (left or right)
static int md=0;//type of karlos to draw
static int mx=-1,my=-1;
int x,y;
char kar[2][57][60]={
"000000000000000000000000000000000000000000000000000000000000",
"000000000000000000000000000000000000000000000000000000000000",
"000000000000000000000000000000000000000000000000000000000000",
"000000000000000000000000000000000000000000000000000000000000",
"000000000000000000000001111666550000000000000000000000000000",
"000000000000000000000006111166550000000000000000000000000000",
"000000000000000066666666666666666666000000000000000000000000",
"000000000000006677777767777767777777600000000000000000000000",
"000000000000061677777667777767777777760000000000000000000000",
"000000000006611677777677777667777777760000000000000000000000",
"000066666666116777777677777666677767760000000000000000000000",
"000061111111116666666666666611666666666666666600000000000000",
"000031111111161111111666111611611161111111111166666660000000",
"000061111166666111111611111111161111111111111111111116610000",
"000061111664446111111611111111161111111111111111111116160000",
"000066666644664611111611111111161166661111111111111116160000",
"000000006646664611111611111111161666444661111111111116666000",
"000000000046664611111611111111161664464666111111116611116000",
"000000000044664666666666611111161644666466111111116116666000",
"000000000004444000000000666666666646666446111111166666000000",
"000000000000000000000000000000000046666446666666660000000000",
"000000000000000000000000000000000044464466000000000000000000",
"000000000000000000000000000000000000444000000000000000000000",

};

if( (tx!=mx)||(ty!=my) ){
mx=tx;
my=ty;
md++;if(md>1)md=0;
}//if
for(y=0;y<=22;y++){
	for(x=0;x<=60;x++){
		if(cx-dx<=0)if(kar[0][y][x]!=48)putpixel(-0+(26-x)+rx*10,-20+y+ry*10,kar[0][y][x]-48);
		if(cx-dx>0)if(kar[0][y][x]!=48)putpixel(-20+x+rx*10,-20+y+ry*10,kar[0][y][x]-48);
	}//for
}//for
delay(0);
}//void draw_policeman
//*******************************************************





