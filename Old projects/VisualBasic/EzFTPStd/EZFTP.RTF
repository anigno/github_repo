{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f36\fswiss\fcharset238\fprq2 Arial CE;}{\f37\fswiss\fcharset204\fprq2 Arial Cyr;}{\f39\fswiss\fcharset161\fprq2 Arial Greek;}
{\f40\fswiss\fcharset162\fprq2 Arial Tur;}{\f43\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-2
\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls1}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls2}}{\info{\author Rod Hewitt}{\operator Rod Hewitt}{\creatim\yr1997\mo12\dy22\hr21\min40}{\revtim\yr2000\mo2\dy22\hr16\min54}{\version3}{\edmins2}
{\nofpages5}{\nofwords1295}{\nofchars7387}{\*\company COOL.STF}{\nofcharsws0}{\vern8247}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0
\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\qc \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\fs28\cgrid0 EZFTP ActiveX Control
\par Copyright \'a9 1996 Rod Hewitt
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\cgrid0 
\par }{\b\f1\cgrid0 Introduction}{\f1\cgrid0 
\par 
\par EZFTP.OCX is an ActiveX control that interfaces many programming languages like Visual Basic, Access and Visual C++ 4.0 to the TCP/IP File Transfer Protocol using the WININET code provided by Microsoft Internet Explorer 3.0 and above. 
\par 
\par Two versions of EZFTP are available:
\par 
\par {\pntext\pard\plain\f3\fs20\cgrid0 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnindent360 {\pntxtb \'b7}}\faauto\ls1\adjustright\rin0\lin360\itap0 {\f1\cgrid0 
EZFTP Standard Edition is a freeware control that allows full operation in synchronous mode.
\par {\pntext\pard\plain\f3\fs20\cgrid0 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li360\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnindent360 {\pntxtb \'b7}}\faauto\ls1\adjustright\rin0\lin360\itap0 {\f1\cgrid0 
EZFTP Professional Edition is a $49.00 shareware product that has all the features of the Standard Edition plus:
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\adjustright\rin0\lin0\itap0 {\f1\cgrid0 
\par {\pntext\pard\plain\f3\fs20\cgrid0 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \li1080\ri0\nowidctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls2\adjustright\rin0\lin1080\itap0 {\f1\cgrid0  Asynchronous operatio
n of the GetFile and PutFile methods
\par {\pntext\pard\plain\f3\fs20\cgrid0 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \li1080\ri0\nowidctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls2\adjustright\rin0\lin1080\itap0 {\f1\cgrid0  Ability to cancel transfers

\par {\pntext\pard\plain\f3\fs20\cgrid0 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \li1080\ri0\nowidctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls2\adjustright\rin0\lin1080\itap0 {\f1\cgrid0 
 Transfer progress event that allows a progress bar to be displayed
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\cgrid0 
\par Only the Standard Edition of EZFTP is provided on the COOL.STF homepage. To receive the Professional Edition via email, please send a check or money order for $49.00 to:
\par 
\par \tab Rod Hewitt, COOL.STF
\par \tab 11614 Waesche Drive
\par \tab Bowie MD 20716
\par \tab USA
\par 
\par Be sure to include your email address so we can mail you the registered version of the control and the .LIC file.
\par 
\par }{\b\f1\cgrid0 Distribution Details}{\f1\cgrid0 
\par 
\par EZFTP.OCX is owned and copyrighted by COOL.STF. You may use EZFTP with any application without royalties or fees. Note that the Standard Edition of EZFTP only supports synchro
nous operation. This means that if you request a large file from a remote FTP server, control will be returned to your application only when the transfer has completed or has failed.
\par 
\par }{\b\f1\cgrid0 Installation}{\f1\cgrid0 
\par 
\par There is currently no flashy installation program, but all you need to do is:
\par 
\par }\pard \ql \fi-360\li360\ri0\nowidctlpar\faauto\adjustright\rin0\lin360\itap0 {\f1\cgrid0 1.\tab Transfer EZFTP.OCX and WININET.DLL to your \\Windows\\System or \\Winnt\\System32 folder
\par 2.\tab Make sure you overwrite any older version of WININET.DLL. Using versions prior to the 5/24/96 version provided in the ZIP will cause GPFs when the application ends.
\par 3.\tab Make sure you have the MFC/OLE DLLs on your system
\par 4.\tab Make sure MFC40.DLL is dated 10/6/95 or later
\par 5.\tab Register EZFTP.OCX with the command:
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\cgrid0 
\par \tab REGSVR32 EZFTP.OCX
\par 
\par If you don't have the MFC/OLE DLLs or don't have the latest versions, they can be download from the COOL.STF homepage, http://www.coolstf.com.
\par 
\par }{\b\f1\cgrid0 Properties}{\f1\cgrid0 
\par 
\par }{\i\f1\cgrid0 UserName}{\f1\cgrid0  - string
\par 
\par Set to the user name to log on with. For anonymous transfers, set to "anonymous".
\par 
\par }{\i\f1\cgrid0 Password}{\f1\cgrid0  - string
\par 
\par Set to the password to log on with. For anonymous transfers, set to an email address, for example "myname@domain.com".
\par 
\par }{\i\f1\cgrid0 LocalFile}{\f1\cgrid0  - string
\par 
\par Set to the name of the local file to be transferred to or from. For example, "c:\\windows\\desktop\\myfile.txt".
\par 
\par }{\i\f1\cgrid0 RemoteFile}{\f1\cgrid0  - string
\par 
\par Set to the name of the remote file to be transferred to or from. For example, "/home/myacct/etc/stuff.txt".
\par 
\par }{\i\f1\cgrid0 Binary}{\f1\cgrid0  - boolean
\par 
\par Set as appropriate for the file transfer mode. If transferring ASCII files, should be false to allow <lf> to <cr><lf> translations when moving files between the PC and a Unix machine. If transferring binary files, set true.
\par 
\par }{\i\f1\cgrid0 RemoteAddress}{\f1\cgrid0  - string
\par 
\par Sets the address of the remote FTP server. Accepts either domain names, for example "ftp.domain.com" or IP addresses, for example "204.157.123.4".
\par 
\par }{\i\f1\cgrid0 RemoteDirectory}{\f1\cgrid0  - string
\par 
\par Sets or returns the directory in use on the remote FTP server. For example:
\par 
\par \tab MsgBox EZFTP1.RemoteDirectory
\par 
\par might display "/usr/bin/rod". To change directory on the remote server, use:
\par 
\par \tab EZFTP1.RemoteDirectory = "/usr/barney/hate/hate/hate"
\par 
\par provided the directory exists on the remote system (doesn't every machine have a /usr/barney/hate/hate/hate directory!!).
\par 
\par }{\i\f1\cgrid0 UseCache}{\f1\cgrid0  - boolean
\par 
\par Signals that EZFTP will attempt to use the cache to transfer the file if set to true. Setting to false (the default) will force EZFTP to go to the wire to transfer the file, regardless of whether the file is cached.}{\b\f1\cgrid0 
\par 
\par Professional Edition only:
\par 
\par }{\i\f1\cgrid0 CancelTransfer }{\f1\cgrid0 - boolean
\par 
\par Setting this property to true during the }{\i\f1\cgrid0 TransferProgress}{\f1\cgrid0  event will abort the current transfer.}{\b\f1\cgrid0 
\par 
\par Methods
\par }{\f1\cgrid0 
\par }{\i\f1\cgrid0 Connect}{\f1\cgrid0 
\par 
\par Opens a connection to the remote FTP server specified in RemoteAddress.
\par 
\par }{\i\f1\cgrid0 Disconnect
\par }{\f1\cgrid0 
\par Closes the connection with the remote FTP server previously opened with Connect. You must take care to issue a Disconnect after a successful Connect. Failure to do so will leave an open FTP connection on the server.
\par 
\par }{\i\f1\cgrid0 GetFile
\par }{\f1\cgrid0 
\par Receives the remote file specified in RemoteFile and stores it locally in the file specified by LocalFile. Overwrites the local file if it already exists. For example:
\par 
\par \tab EZFTP1.RemoteFile = "/etc/termcap"
\par \tab EZFTP1.LocalFile = "c:\\windows\\desktop\\termcap.txt"
\par \tab On Error Resume Next
\par \tab EZFTP1.GetFile
\par \tab If Err  <> 0 Then
\par \tab \tab MsgBox "Unable to get file. Error code : " & Format$(Err.Number)
\par \tab End If
\par 
\par }{\i\f1\cgrid0 PutFile
\par }{\f1\cgrid0 
\par Transfers the local file specified by LocalFile to the file specified by RemoteFile on the FTP server.
\par 
\par }{\i\f1\cgrid0 MkDir (Directory as string)
\par }{\f1\cgrid0 
\par Creates a directory specified by the string Directory on the remote FTP server.
\par 
\par }{\i\f1\cgrid0 RmDir (Directory as string)}{\f1\cgrid0 
\par 
\par Removes the directory specified by the string Directory on the remote FTP server.
\par 
\par }{\i\f1\cgrid0 RenameFile (OldName as string, NewFile as string)}{\f1\cgrid0 
\par 
\par Renames the file specified in OldName to NewFile on the remote FTP server.
\par 
\par }{\i\f1\cgrid0 DeleteFile (FileName as string)
\par }{\f1\cgrid0 
\par Deletes the file specified in FileName on the remote FTP server.
\par 
\par }{\i\f1\cgrid0 GetDirectory (FileName as string)}{\f1\cgrid0 
\par 
\par Gets a directory listing for the remote system. Wildcards may be specified in the FileName string. Fires the NextDirectoryEvent for each file that is reported by the remote FTP server. For example:
\par 
\par \tab On Error Resume Next
\par 
\par 'Get the directory. Work actually done in the NextDirectoryEntry event
\par \tab EZFTP1.GetDirectory "*.*"
\par 
\par 'Arrive here after all possible files have been returned
\par \tab If Err <> 0 Then
\par \tab \tab MsgBox "Unable to get directory. Error: " & format$(Err.Number)
\par \tab End If
\par 
\par }{\b\f1\cgrid0 Events
\par }{\f1\cgrid0 
\par }{\i\f1\cgrid0 NextDirectoryEntry (FileName As String, Attributes As Long, Length As Double)
\par }{\f1\cgrid0 
\par Fires for each file that is returned by the remote FTP server after a GetDirectory method is used.
\par 
\par }{\i\f1\cgrid0 \tab FileName\tab }{\f1\cgrid0 Contains the name of the file on the remote system
\par 
\par }{\i\f1\cgrid0 \tab Attributes}{\f1\cgrid0 \tab Contains bit flags indicating the type of the file.
\par 
\par }{\i\f1\cgrid0 \tab Length\tab }{\f1\cgrid0 \tab Contains the length of the file in bytes.
\par 
\par }{\b\f1\cgrid0 Professional Edition only:
\par }{\i\f1\cgrid0 
\par TransferProgress(BytesTransferred As Long, TotalBytes As Long)
\par 
\par }{\f1\cgrid0 Fires for every 512 bytes transferred during a }{\i\f1\cgrid0 GetFile}{\f1\cgrid0  or }{\i\f1\cgrid0 PutFile}{\f1\cgrid0  method. Can be used to update a progress indicator. You may also set the }{\i\f1\cgrid0 CancelTransfer }{\f1\cgrid0 
property in this event to abort a file transfer.
\par 
\par }{\b\f1\cgrid0 Error Handling}{\f1\cgrid0 
\par 
\par The RemoteDirectory property when written to and all methods can generate runtime errors. For example, attempting to receive a file that doesn't exist wit
h the GetFile method will generate a runtime error. Therefore, it is important to ensure that error handling routines are provided for the methods and the RemoteDirectory property.
\par 
\par If an error occurs, Err.Number can be set to one of the following values. 
The errors without an explanation should never be seen. If you do encounter one of these errors, be sure to let us know what you did to generate the error. Send email to rod@coolstf.com.
\par 
\par }\pard \ql \fi-990\li990\ri0\nowidctlpar\faauto\adjustright\rin0\lin990\itap0 {\f1\cgrid0 1000\tab General Error.
\par 1001\tab Out of handles.
\par 1002\tab Timeout. The operation was aborted because the remote system didn't respond.
\par 1003\tab Extended error.
\par 1004\tab Internal error. 
\par 1005\tab Invalid URL.
\par 1006\tab Unrecognized scheme.
\par 1006\tab Name not resolved. The remote domain name couldn't be resolved.
\par 1008\tab Protocol not found.
\par 1009\tab Invalid option.
\par 1010\tab Bad option length.
\par 1011\tab Option not settable.
\par 1012\tab Shutdown.\tab 
\par 1013\tab Incorrect user name. The user name specified in the UserName property was not accepted by the remote system.
\par 1014\tab Incorrect password. The password specified in the Password property was not accepted by the remote system.
\par 1015\tab Login failure. The server didn't allow the user name / password combination.
\par 1016\tab Invalid operation.
\par 1017\tab Operation cancelled.
\par 1018\tab Incorrect handle type.
\par 1019\tab Not local handle.
\par 1020\tab Not proxy request.
\par 1021\tab Internet registry value not found.
\par 1022\tab Bad registry parameter.
\par 1023\tab No direct access.
\par 1027\tab Transfer in progress.
\par 1028\tab FTP connected.
\par 1029\tab FTP disconnected. The remote system unexpectedly closed the connection.
\par  
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\cgrid0 Additionally, Err.Description contains an description of the error, plus any extra error information returned by the FTP interface, separated by a colon. For example:
\par 
\par }\pard \ql \fi-720\li1440\ri0\nowidctlpar\faauto\adjustright\rin0\lin1440\itap0 {\f1\cgrid0 Unable to connect to FTP server: 220-Welcome to the Internet Interstate FTP server!
\par 220-
\par 220 sheldon FTP server (Version wu-2.4(1) Thu Aug 17 09:56:25 EDT 1995) ready.
\par 331 Password required for xx.
\par 530 Login incorrect.
\par 221 Goodbye.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\cgrid0 
\par }{\b\f1\cgrid0 Aborting Transfers
\par }{\f1\cgrid0 
\par This section is only applicable to the Profession Edition of EZFTP.
\par 
\par If you abort a transfer by setting the }{\i\f1\cgrid0 CancelTransfer}{\f1\cgrid0 
 property, be aware that you will probably need to close and then re-establish the connection to the FTP server. Whether you have to do this or not depends on the FTP server being used, but to be safe, we recommend doing it e
ach time after a cancelled transfer.
\par 
\par To close and then re-establish a connection, use code like:
\par 
\par \tab temp$ = EZFTP1.RemoteDirectory
\par \tab EZFTP1.GetFile
\par \tab If AbortedFlag = True Then
\par \tab \tab EZFTP1.Disconnect
\par \tab \tab EZFTP1.Connect
\par \tab \tab EZFTP1.RemoteDirectory = temp$
\par \tab \tab AbortedFlag = False
\par \tab Endif
\par 
\par }}