<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListDrives.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListDrives.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAm
        DwAAAk1TRnQBSQFMAgEBCQEAAQ4BAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wQABvMF9DUABfMG9DUA
        BPMH9DUAA/MH9AH/NQAC8wf0Av81AAHzB/QD/zUAB/QE/zUABvQF/zUABfQG/zUAAvQI8wH/NQAD9Aj/
        NQAC9An/NQAB9Ar/NQAC/wjzAfQ1AAn/AfQB83gAAaEB3A0AAaEBzwG1Ae8BtAGGAaEKAAahGAABoQF6
        Ae8CGQOhBwABoQEZAbsD7wEHAvABpwGhBwAFoQGFAQQEAAGhDlkBoQUAAdsB/wHcAv8BhQShAwABoQEI
        AQkCuwH3Ae0B9wG8AfAB8gG8AaEGAAGFAaEBhQEEAV8BEAYADjgHAAEJAf8B1QH0AfMB8AGFAaEEAAHz
        ArwBCQG7Ae8B9wEHAfEB8gLzAacGAAEEAQoBFQEOAUMBZQYAAXoNWQcAAqEChQEEAfQB8AKhAgABoQEH
        AQgDvAIHAbwB8gL0AvMBoQUAAREBZQOKAWUGAA5ZAYwCAAOhAYUBrgG8AfABtQEEAYUB8AEHAwABCQIH
        AQgDvAHwAfIB9AH/AfQB8gHzAc8FAAFDAQ4BDwEOAQ8BDgYAAVkIegKaBFkFAAGuAbUErgGGAacBBwMA
        A+8BBwEIAvMCzwH0AfMB8QO8BQABQwMPAg4GAAR6ApoGoALDAZoEAAGLAaYB7AHxAQcBrgKLAf8EAAHv
        AZEB9wHvAQcBzwEJAc8BtQEHAbwB7wH3AZEBBwUAAUMDDgIPBgAIoAfDAwADZQH3AoYBkQHyAfEBiwQA
        AQcBtQHvAQcB8QHPAacBrgEJAfQBvAG7AbUB9wHvBQABFQMPAg4GAAHDAZoCoAvDAwADZQG8AfEBhgKL
        AbUBhgQAAfAB8gHwAfMC9AGGAbQCvAEJA7sBtQUAARUCDgMPBgAEwwagAZoCegUAAmUBiwHrAYsBrgHP
        AbwCtQQAAacC8wH0Af8B8wHwAgcCvAEJArsBzwUAARUBDwIOAg8GAAbDBqABegUAAWUBCQGuAbUCrgHz
        AfEBvAG0BAABoQHzAvQB8wHxAQcC7wEHArwBCQG7AaEFAAEUAg8BDgHvARwGAAbDDAABoQLxBLUB8gEH
        AYYFAAGhAfMB9AHxAbwB7wK1AQcDCAGhBgABFAEPARwBvAHvARwGAAbDDQABpgHzAfIDvAHzAfIHAAGh
        AvEBvAH3AZEBkgHvAgcBoQcAARQBDwQUGgABZQH/BPQJAAGhAacBvAEHAbUC7wEJAaEIAAUULQADoUkA
        AqEIpwKhMgABoQMECIYCBAGhBQABoQGFA6EnAAGhARQBEgHqAQABDwEVAQAC6gEAAm0BEgGhBQABoQHw
        AfEB8AEHA6EFAA6hAgAOoQEAAaEBEwJtAQ4BEAEUAQAB6wEUAQAC6wHqAaEEAAGhAQcB8QH0AfABBwH3
        AgcDoQEAAYUBXwG8AvAB8QLyBPMD9AEAAYUBXwG8AvAB8QLyBPMD9AEAAaEB8wvyAfQEAAGhAbwB8gGL
        Ac8DiwGSAQcB8QHvAYUCAAGhArMCugHbA9wF2wIAAaEBZgGLAq4BkQO1AbQDrgG1AgABBwH/AfMBvAH/
        AvMB9APzAf8B8gQAAaEB7wS0As8BtAHPAQcCvAIAAaEB8AHyAfMI9AL/AgABoQHwAfIB8wj0Av8CAAHx
        BfAG8QG8AwABoQG8AbQCCQG0AosDzwGLAfEBoQIAAaEB7wEHAbwB8AHxAvIG8wIAAaEB7wEHAbwB8AHx
        AvIG8wIAAQcEvAHyAfABvATwAbwCAAGhAbwB8AEZAgkB8QEHAe8BBwLPAbQFAAHvAQcB8AHyAfMH9AQA
        Ae8BBwHwAfIB8wf0AwAB7wMHAfACBwG8AQcEvAIAAaEB7wHzAbQBGQEJAbsB8wHyA7QBoQYAAfcBBwG8
        AfAB2wH0AdsC8wH0BgAB9wEHAbwB8AGuAfQBrgLzAfQEAAUHAbwB8gG8BAcB7wEAAaEB9AH/Ae8B8QG0
        ARkB7wEJArsBtAGhCAAB9wHvAbwB8AGQAvEB8ggAAfcB7wG8AfABZgLxAfIFAALvBQcE7wEHAa4CAAH0
        AfACvAHzAbwB8gHtAZIB7wGhJgABhgHwBgcE7wYAA7wBBwLwAfEoAAHwBgcBvAL3AfEHAAHzAf8B9ALz
        KQAB8gi8AQcB9zUAAfII8AHxAQdSAAFCAU0BPgcAAT4DAAEoAwABQAMAATADAAEBAQABAQUAAYABARYA
        A/8BAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHg
        AQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAHgAQMGAAL/BgAB/AH/AfgBDwH8AQ8C/wHwAQ8B4AED
        AfgBDwIAAfgBAQHAAQEB+AEPAYABAQH8AQMBwAEBAfgBDwGAAQEB/AEBAYABAAH4AQ8BgAEAAcABAwGA
        AQAB+AEPAYABAAH4AQMBgAEAAfgBDwGAAQAB8AEHAYABAAH4AQ8BgAEAAeABBwGAAQAB+AEPAYABAAHg
        AQcBgAEAAfgBDwGAAQMB4AEHAYABAAH4AQ8BgAEDAeABBwGAAQAB+AEPAYEB/wHgAQcBwAEBAfgBDwGB
        Af8B8AEPAeABAwH4AR8C/wH4AR8B8AEHAfgBHwT/Af4BPwj/AeABAQb/AYABAAH4AT8E/wGAAQAB+AEH
        AcABAAHAAQABgAEAAfABAAGAAQABgAEAAYABAQHgAQABwAEAAcABAAHAAQEB4AEAAcABAAHAAQABwAEB
        AcABAAHAAQABwAEAAcABAQGAAQMB4AEBAeABAQHAAQEBgAEDAfABAwHwAQMBwAEBAQABBwH4AQcB+AEH
        AcABAQGAAQ8E/wHAAQMB8AEfBP8B4AEDAfgBPwT/AeABAwb/AeABAwr/Cw==
</value>
  </data>
</root>